/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'admin' at '16-6-29 下午1:52' with Gradle 2.5
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.5/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/


def variable = 1
def int variable2 = 2
def String variable3 = "hello world"
def boolean variable4 = false
println(variable + " : " + variable2 + " : " + variable3 + " : " + variable4)

String testFunction(arg1, arg2){
     println("===testFunction====");
    return arg1+arg2
}

def function(int arg1,String args2) {
    println(arg1+args2)//最后一行代码的执行结果就是返回值
}

String getString() {
    return "I am a string"
}

//'''xxx'''在字符串中支持任意换行
def multiLines = '''
        begin
        line 1
        line 2
        end '''

println(multiLines)

def variable5 = 'this is variable 5'//当前对象的属性

println(variable5)

def printX() {
   // println variable3
    //println variable5
    println variable6
}

import groovy.transform.Field
@Field variable6 = 'this is variable 6'//当前对象的成员变量

task taskTest << {
    println getString()
    println multiLines
    printX()
}


println project.name